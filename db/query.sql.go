// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: query.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createSecret = `-- name: CreateSecret :one
INSERT INTO secret_message (message) VALUES ($1) RETURNING id, message
`

func (q *Queries) CreateSecret(ctx context.Context, message string) (SecretMessage, error) {
	row := q.db.QueryRow(ctx, createSecret, message)
	var i SecretMessage
	err := row.Scan(&i.ID, &i.Message)
	return i, err
}

const deleteSecret = `-- name: DeleteSecret :exec
DELETE FROM secret_message WHERE id = $1
`

func (q *Queries) DeleteSecret(ctx context.Context, id pgtype.UUID) error {
	_, err := q.db.Exec(ctx, deleteSecret, id)
	return err
}

const getSecret = `-- name: GetSecret :one
SELECT id, message FROM secret_message WHERE id = $1
`

func (q *Queries) GetSecret(ctx context.Context, id pgtype.UUID) (SecretMessage, error) {
	row := q.db.QueryRow(ctx, getSecret, id)
	var i SecretMessage
	err := row.Scan(&i.ID, &i.Message)
	return i, err
}
